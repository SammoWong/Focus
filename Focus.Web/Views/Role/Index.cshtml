
@{
    ViewData["Title"] = "角色管理";
}
<div class="wrapper wrapper-content  animated fadeInRight">
    <div class="row">
        <div class="col-sm-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>操作</h5>
                    <div class="ibox-tools">
                        <a class="collapse-link">
                            <i class="fa fa-chevron-up"></i>
                        </a>
                        <a class="close-link">
                            <i class="fa fa-times"></i>
                        </a>
                    </div>
                </div>
                <div class="ibox-content" id="buttonList">
                    <button code="role-add" class="btn btn-primary" type="button" id="btnAdd"><i class="fa fa-plus"></i> 添加</button>
                    <button code="role-update" class="btn btn-info" type="button" id="btnUpdate"><i class="fa fa-edit"></i> 修改</button>
                    <button code="role-delete" class="btn btn-danger" type="button" id="btnDelete"><i class="fa fa-times"></i> 删除</button>
                    <button class="btn btn-success" type="button" id="btnDetail"><i class="fa fa-search"></i> 查看</button>
                </div>
            </div>
        </div>
        <div class="col-sm-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>详情</h5>
                    <div class="ibox-tools">
                        <a class="collapse-link">
                            <i class="fa fa-chevron-up"></i>
                        </a>
                        <a class="close-link">
                            <i class="fa fa-times"></i>
                        </a>
                    </div>
                </div>
                <div class="ibox-content">
                    <table id="bootstrapTable" data-mobile-responsive="true"></table>
                </div>
            </div>
        </div>
    </div>
</div>
@await Html.PartialAsync("_Wizard")

@section scripts{
<script>
        var viewModel = function () {
            return {
                init: function () {
                    this.initPage();
                    this.bindEvents();
                },
                methods: {
                    bindRoles: function () {
                        $('#bootstrapTable').clientSidePagination({
                            url: apiUrl + '/api/Roles',
                            columns: [
                                {
                                    radio: true
                                }, {
                                    field: 'name',
                                    title: '角色名称',
                                    sortable: true,
                                }, {
                                    field: 'code',
                                    title: '角色代码',
                                    sortable: true,
                                }, {
                                    field: 'createdTime',
                                    title: '创建时间',
                                    sortable: true,
                                }, {
                                    field: 'enabled',
                                    title: '是否有效',
                                    sortable: true,
                                    formatter: function (value, row, index) {
                                        return value ? "<i class=\"fa fa-check text-navy\">有效</i>" : "<i class=\"fa fa-close text-danger\">无效</i>";
                                    }
                                }, {
                                    field: 'isDeleted',
                                    title: '是否删除',
                                    sortable: true,
                                    formatter: function (value, row, index) {
                                        return value ? "<i class=\"fa fa-toggle-off text-danger\">已删除</i>" : "<i class=\"fa fa-toggle-on text-navy\">未删除</i>";
                                    }
                                }, {
                                    field: 'description',
                                    title: '角色描述'
                                }
                            ]
                        });
                    },
                    initSteps: function () {
                        $("#wizardForm").steps({
                            bodyTag: "fieldset",
                            transitionEffect: "slideLeft",
                            onStepChanging: function (event, currentIndex, newIndex) {
                                if (currentIndex > newIndex) {
                                    return true;
                                }
                                return $('#wizardForm').formValid();
                            },
                            onCanceled: function (event) {
                                $('#wizardModal').modal('hide');
                                $("#wizardForm").steps("previous");
                            },
                            onFinishing: function (event, currentIndex) {// 点击完成时事件
                                var ref = $("#jstree").jstree(true);
                                var sel = ref.get_selected();
                                var data = $('#wizardForm').formSerialize();
                                data['permissionAccessIds'] = sel;
                                if (_.isEmpty(data.id)) {
                                    _.post(apiUrl + '/api/Role/Add', data, function (data) {
                                        if (data.code == 0) {
                                            viewModel.methods.bindRoles();
                                            toastr.success(data.message);
                                            $('#wizardModal').modal('hide');
                                            $("#wizardForm").steps("previous");
                                            return true;
                                        } else {
                                            toastr.error(data.message);
                                            return false;
                                        }
                                    });
                                } else {
                                    _.post(apiUrl + '/api/Role/Update', data, function (data) {
                                        if (data.code == 0) {
                                            viewModel.methods.bindRoles();
                                            toastr.success(data.message);
                                            $('#wizardModal').modal('hide');
                                            $("#wizardForm").steps("previous");
                                            return true;
                                        } else {
                                            toastr.error(data.message);
                                            return false;
                                        }
                                    });
                                }
                            }
                        });
                    },
                    bindPermissions: function (roleId) {
                        bindJsTree('jstree', apiUrl + '/api/Master/' + roleId + '/Permission', true);
                    },
                },
                initPage: function () {
                    var methods = this.methods;
                    $('#bootstrapTable').bootstrapTable();
                    methods.bindRoles();
                    methods.initSteps();
                    var url = apiUrl + '/api/Module/' + request('moduleId') + '/PermissionButtons';
                    bindAuthorizedButtons(url);
                },
                bindEvents: function () {
                    var methods = this.methods;
                    $('#btnAdd').click(function () {
                        methods.bindPermissions();
                        $('#wizardModal').modal('show');
                        $('#wizardForm')[0].reset();
                    });

                    $('#btnUpdate').click(function () {
                        var selections = $('#bootstrapTable').bootstrapTable('getSelections');
                        if (selections.length <= 0) {
                            toastr.error('请选择要编辑的角色');
                            return false;
                        }
                        methods.bindPermissions(selections[0].id);
                        $("#wizardForm").formSerialize(selections[0]);
                        $('#wizardModal').modal('show');
                    });

                    $('#btnDelete').click(function () {
                        var selections = $('#bootstrapTable').bootstrapTable('getSelections');
                        if (selections.length <= 0) {
                            toastr.error('请选择要删除的角色');
                            return false;
                        }
                        _.post(apiUrl + '/api/Role/Delete', { id: selections[0].id }, function (data) {
                            if (data.code == 0) {
                                methods.bindRoles();
                                toastr.success(data.message);
                            } else {
                                toastr.error(data.message);
                            }
                        })
                    });

                    $('#btnDetail').click(function () {
                        $('#detailModal').modal('show');
                    });
                }
            }
        }();
        window.onload = function () {
            viewModel.init();
        }
</script>
}

